-----------------------------------------------------------------------------------------------
XX：本工具库的命名头
-----------------------------------------------------------------------------------------------
一些规则：
	小驼峰：首字母小写后续首字母大写，如：audioPlayer、videoPlayer
	大驼峰：首字母全大写，如：AudioPlayer
	小卡车：首字母全大写，单词之间以下划线分割，如：Audio_Player、Video_Player(可能使用情况不多，但先定义，枚举值使用小卡车？？？)
	大卡车：全大写，单词之间以下划线分割，如：AUDIO_PLAYER、VIDEO_PLAYER
-----------------------------------------------------------------------------------------------
命名规则：
	宏定义：大卡车
	防重复引用宏：文件名_h
	类名/文件：XX小驼峰，如XXcustomClass，其实本应该XXCustomClass才是比较合理的命名，
			  但是由于类似XXTSReader的前缀稍微臃肿，故特殊化处理。
	类属性变量：
		OC：小驼峰
		C/C++:m_小驼峰
-----------------------------------------------------------------------------------------------
注释格式：
类/文件头注释格式：
	/**
	 * @author: author
	 * @date: yyyymmdd
	 * @descirption: 简单描述
	 * @history:
	 *	author - date
	 *	1.modify1
	 *	2.modify2
	 */

函数说明注释格式：
	/**
	 * @brief	功能简述
	 * @param	参数1 参数1含义说明
	 * @param	参数2 参数2含义说明
	 * @return	返回值 返回值说明	 
	 */

类属性注释：应当首选右方注释

语言/平台相关特有注释方法
	Object-C：
		#pragma mark - 构造析构				一些构造、初始化和析构等相关块mark
		#pragma mark - 属性读写: <属性1读/写>	一些属性的getter和setter的重载
		#pragma mark - 公共函数: <方法简介1>	一些公共函数块mark，块中包含的函数数量一般为5
		#pragma mark - 私有函数: <方法简介1>	一些私有函数块mark，块中包含的函数数量一般为5
		#pragma mark - 代理函数: <代理名称>	一些代理函数块mark，块中包含的函数数量一般为5

-----------------------------------------------------------------------------------------------
调试信息输出格式：
	[XX] [FILE:] [LINE:] 自定义信息
-----------------------------------------------------------------------------------------------
目录结构：
	1. 自定义工具/模块是以使用的语言划分，尽量不允许往工具库中添加混编工具/模块
    2. 封装三方库的接口,以库名称划分

<C>
{
	XXbyteOrder.h   - 在内存中按指定字节序读取数据
    XXbyteOrder.c

    XXavDefine.h    - 此库中音视频通用定义

    XXtsType.h      - ts流拆解时使用定义
    XXtsReader.h    - 从ts数据中读取音视频帧
    XXtsReader.c
},
<Object-C>
{
	<Extend> 	- 对原来OC模块的扩展
		NSMutableDictionary+XXnode.h	- Dict的Json数据结构读写扩展
		NSMutableDictionary+XXnode.m
		NSMutableArray+XXnode.h			- Array的Json数据结构读写扩展
		NSMutableArray+XXnode.m
		XXnode.h 						- Dict/Array的链式操作
		XXnode.m

	<Shell> 	- 对控件进行功能封装
		XXshellCellBase.h 	- 容器类shell基类和自定义cell协议
		XXshellCellBase.m

		XXlistViewShell.h 	- TableView的其中一种特殊用例，单一section的显示模式
		XXlistViewShell.m

		XXtableViewShell.h 	- 根据数据结构自动对容器TableView进行cell加载
		XXtableViewShell.m

	<Utility> 	- 通用性代码集？

	<View>		- 自定义View或者

	<Component> - 
},
